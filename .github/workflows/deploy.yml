name: 🚀 Build & Deploy to Production

on:
  push:
    branches:
      - prod
  workflow_dispatch:

env:
  REGISTRY_HOST: registry.qmweb.fr
  DOCKERFILE_PATH: docker/Dockerfile.prod

jobs:
  build-and-push:
    name: 🐋 Build & Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      image-name: ${{ steps.get-image-name.outputs.IMAGE_NAME }}

    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for better caching

      - name: 📦 Get app name from package.json
        id: get-image-name
        run: echo "IMAGE_NAME=$(jq -r .name package.json)" >> $GITHUB_OUTPUT

      - name: 📦 Log image name
        run: |
          echo "📦 Extracted name: ${{ steps.get-image-name.outputs.IMAGE_NAME }}"

      - name: 🔐 Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_HOST }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: 🔨 Build Docker image
        run: |
          # Build image
          docker build \
            --compress \
            --file ${{ env.DOCKERFILE_PATH }} \
            --tag ${{ env.REGISTRY_HOST }}/${{ steps.get-image-name.outputs.IMAGE_NAME }}:latest \
            --tag ${{ env.REGISTRY_HOST }}/${{ steps.get-image-name.outputs.IMAGE_NAME }}:${{ github.sha }} \
            --build-arg NEXT_PUBLIC_APP_URL="${{ secrets.NEXT_PUBLIC_APP_URL }}" \
            --build-arg NEXT_PUBLIC_APP_URL_CANONICAL="${{ secrets.NEXT_PUBLIC_APP_URL_CANONICAL }}" \
            ./

          # Push image
          docker push ${{ env.REGISTRY_HOST }}/${{ steps.get-image-name.outputs.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY_HOST }}/${{ steps.get-image-name.outputs.IMAGE_NAME }}:${{ github.sha }}

      - name: 🔄️ Verify image push
        run: |
          echo "✅ Image successfully pushed to registry"
          echo "📦 Image: ${{ env.REGISTRY_HOST }}/${{ steps.get-image-name.outputs.IMAGE_NAME }}:latest"
          echo "🏷️  Tag: ${{ env.REGISTRY_HOST }}/${{ steps.get-image-name.outputs.IMAGE_NAME }}:${{ github.sha }}"

      - name: 🧹 Cleanup
        if: always()
        run: |
          rm -f .env.build
          echo "🧹 Build environment file cleaned up"

  notify:
    name: 📢 Notify Deployment Status
    runs-on: ubuntu-latest
    needs: build-and-push
    if: always()

    steps:
      - name: 🎉 Deployment Success
        if: needs.build-and-push.result == 'success'
        run: |
          echo "🎉 Deployment successful!"
          echo "📦 Image: ${{ env.REGISTRY_HOST }}/${{ needs.build-and-push.outputs.image-name }}:latest"
          echo "🔗 Registry: ${{ env.REGISTRY_HOST }}"
          echo "📝 Commit: ${{ github.sha }}"
          echo "👤 Author: ${{ github.actor }}"

      - name: ❌ Deployment Failed
        if: needs.build-and-push.result == 'failure'
        run: |
          echo "❌ Deployment failed!"
          echo "📝 Commit: ${{ github.sha }}"
          echo "👤 Author: ${{ github.actor }}"
          exit 1

      - name: 📧 Send Email Notification
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ssl0.ovh.net
          server_port: 587
          secure: false
          username: ${{ secrets.SMTP_USER }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: |
            CI/CD Pipeline | ${{ needs.build-and-push.result == 'success' && '🎉 Déploiement réussi' || '❌ Déploiement échoué' }}
          to: ${{ secrets.SMTP_USER }}
          from: QM Web <${{ secrets.SMTP_USER }}>
          body: |
            📋 Informations du déploiement

              📦 Dépôt : ${{ github.repository }}
              🚩 Branche : ${{ github.ref_name }}
              🔑 Commit : ${{ github.sha }}
              👤 Auteur : ${{ github.actor }}

            📦 Images déployées

              - ${{ env.REGISTRY_HOST }}/${{ needs.build-and-push.outputs.image-name }}/latest
              - ${{ env.REGISTRY_HOST }}/${{ needs.build-and-push.outputs.image-name }}/${{ github.sha }}

            🔗 Liens utiles

              - Les détails d'exécution : (${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
              - Le commit : (${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
